[{"filePath":"/home/mar/alkemy/OT91-server/src/App.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Counter' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":17},{"ruleId":"no-unused-vars","severity":1,"message":"'BrowserRouter' is defined but never used.","line":5,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":22},{"ruleId":"no-unused-vars","severity":1,"message":"'Route' is defined but never used.","line":5,"column":24,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":29},{"ruleId":"no-unused-vars","severity":1,"message":"'Switch' is defined but never used.","line":5,"column":31,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":37}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport logo from './logo.svg';\nimport { Counter } from './features/counter/Counter';\nimport './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport ActivitiesForm from './Components/Activities/ActivitiesForm';\nimport CategoriesForm from './Components/Categories/CategoriesForm';\nimport NewsForm from './Components/News/NewsForm';\nimport SlidesForm from './Components/Slides/SlidesForm';\nimport TestimonialForm from './Components/Testimonials/TestimonialsForm';\nimport UserForm from './Components/Users/UsersForm';\nimport SchoolCampaign from './Campaigns/School/SchoolCampaign';\nimport ToysCampaign from './Campaigns/Toys/ToysCampaign';\nimport MembersForm from './Components/Members/MembersForm';\nimport ProjectsForm from './Components/Projects/ProjectsForm';\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          {/* <Route path=\"/\" exact component={} />           Esta ruta debe ser para el Home */}\n          <Route path=\"/create-activity\" component={ActivitiesForm} />\n          <Route path=\"/create-category\" component={CategoriesForm} />\n          <Route path=\"/create-news\" component={NewsForm} />\n          <Route path=\"/backoffice/create-slide\" component={SlidesForm} />\n          <Route path=\"/create-testimonials\" component={TestimonialForm} />\n          <Route path=\"/create-user\" component={UserForm} />\n          <Route path=\"/create-member\" component={MembersForm} />\n          <Route path=\"/create-project\" component={ProjectsForm} />\n          <Route path=\"/school-campaign\" component={SchoolCampaign} />\n          <Route path=\"/toys-campaign\" component={ToysCampaign} />\n        </Switch>\n      </BrowserRouter>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Counter />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <span>\n          <span>Learn </span>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            React\n          </a>\n          <span>, </span>\n          <a\n            className=\"App-link\"\n            href=\"https://redux.js.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Redux\n          </a>\n          <span>, </span>\n          <a\n            className=\"App-link\"\n            href=\"https://redux-toolkit.js.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Redux Toolkit\n          </a>\n          ,<span> and </span>\n          <a\n            className=\"App-link\"\n            href=\"https://react-redux.js.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            React Redux\n          </a>\n        </span>\n      </header>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/App.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Provider' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":11}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\nimport App from './App';\n\ntest('renders learn react link', () => {\n  const { getByText } = render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n\n  expect(getByText(/learn/i)).toBeInTheDocument();\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/School/Content.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Content = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Content;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/School/Footer.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Footer;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/School/Header.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Header = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Header;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/School/SchoolCampaign.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Header' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Slider' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Content' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'Footer' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":14}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport Header from './Header';\nimport Slider from './Slider';\nimport Content from './Content';\nimport Footer from './Footer';\n\nconst SchoolCampaign = () => {\n  return (\n    <>\n      <Header />\n      <Slider />\n      <Content />\n      <Footer />\n    </>\n  );\n}\n\nexport default SchoolCampaign;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/School/Slider.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Slider = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Slider;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/Toys/Content.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Content = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Content;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/Toys/Footer.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Footer;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/Toys/Header.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Header = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Header;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/Toys/Slider.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Slider = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Slider;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/Toys/ToysCampaign.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Header' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Slider' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Content' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'Footer' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":14}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport Header from './Header';\nimport Slider from './Slider';\nimport Content from './Content';\nimport Footer from './Footer';\n\nconst ToysCampaign = () => {\n  return (\n    <>\n      <Header />\n      <Slider />\n      <Content />\n      <Footer />\n    </>\n  );\n}\n\nexport default ToysCampaign;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Activities/ActivitiesForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":21,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":21,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from \"react\";\nimport \"../FormStyles.css\";\n\nconst ActivitiesForm = () => {\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n    description: \"\",\n  });\n\n  const handleChange = (e) => {\n    if (e.target.name === \"name\") {\n      setInitialValues({ ...initialValues, name: e.target.value });\n    }\n    if (e.target.name === \"description\") {\n      setInitialValues({ ...initialValues, description: e.target.value });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(initialValues);\n  };\n\n  return (\n    <form className=\"form-container\" onSubmit={handleSubmit}>\n      <input\n        className=\"input-field\"\n        type=\"text\"\n        name=\"name\"\n        value={initialValues.name}\n        onChange={handleChange}\n        placeholder=\"Activity Title\"\n      ></input>\n\n      <input\n        className=\"input-field\"\n        type=\"text\"\n        name=\"description\"\n        value={initialValues.description}\n        onChange={handleChange}\n        placeholder=\"Write some activity description\"\n      ></input>\n      <button className=\"submit-btn\" type=\"submit\">\n        Send\n      </button>\n    </form>\n  );\n};\n\nexport default ActivitiesForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Activities/ActivitiesList.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport '../CardListStyles.css';\n\nconst ActivitiesList = () => {\n    const activitiesMock = [\n        {id: 2, name: 'Titulo de prueba', description: 'Descripcion de prueba'},\n        {id: 1, name: 'Titulo de prueba', description: 'Descripcion de prueba'},\n        {id: 3, name: 'Titulo de prueba', description: 'Descripcion de prueba'}\n    ];\n\n    return (\n        <div>\n            <h1>Listado Actividades</h1>\n            <ul className=\"list-container\">\n                {activitiesMock.length > 0 ?\n                    activitiesMock.map((activity) => {\n                        return(\n                            <li className=\"card-info\" key={activity.id}>\n                                <h3>{activity.name}</h3>\n                                <p>{activity.description}</p>\n                            </li>\n                        )\n                    })\n                :\n                    <p>No hay actividades</p>\n                }\n            </ul>\n        </div>\n    );\n}\n\nexport default ActivitiesList;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Auth/LoginForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport '../FormStyles.css';\n\nconst LoginForm = () => {\n    const [initialValues, setInitialValues] = useState({\n        email: '',\n        password: ''\n    });\n\n    const handleChange = (e) => {\n        if(e.target.name === 'email'){\n            setInitialValues({...initialValues, email: e.target.value})\n        } if(e.target.name === 'password'){\n            setInitialValues({...initialValues, password: e.target.value})\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(initialValues);\n        localStorage.setItem('token', 'tokenValueExample')\n    }\n\n    return (\n        <form className=\"form-container\" onSubmit={handleSubmit}>\n            <input className=\"input-field\" type=\"text\" name=\"email\" value={initialValues.name} onChange={handleChange} placeholder=\"Enter email\"></input>\n            <input className=\"input-field\" type=\"text\" name=\"password\" value={initialValues.password} onChange={handleChange} placeholder=\"Enter password\"></input>\n            <button className=\"submit-btn\" type=\"submit\">Log In</button>\n        </form>\n    );\n}\n\nexport default LoginForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Auth/RegisterForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport '../FormStyles.css';\n\nconst RegisterForm = () => {\n    const [initialValues, setInitialValues] = useState({\n        name: '',\n        lastName: ''\n    })\n\n    const handleChange = (e) => {\n        if(e.target.name === 'name'){\n            setInitialValues({...initialValues, name: e.target.value})\n        } if(e.target.name === 'lastName'){\n            setInitialValues({...initialValues, lastName: e.target.value})\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(initialValues);\n        localStorage.setItem('token', 'tokenValueExample')\n    }\n\n    return (\n        <form className=\"form-container\" onSubmit={handleSubmit}>\n            <input className=\"input-field\" type=\"text\" name=\"name\" value={initialValues.name} onChange={handleChange} placeholder=\"Enter name\"></input>\n            <input className=\"input-field\" type=\"text\" name=\"lastName\" value={initialValues.lastName} onChange={handleChange} placeholder=\"Enter last name\"></input>\n            <button className=\"submit-btn\" type=\"submit\">Register</button>\n        </form>\n    );\n}\n\nexport default RegisterForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Categories/CategoriesForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport '../FormStyles.css';\n\nconst CategoriesForm = () => {\n    const [initialValues, setInitialValues] = useState({\n        name: '',\n        description: ''\n    })\n\n    const handleChange = (e) => {\n        if(e.target.name === 'name'){\n            setInitialValues({...initialValues, name: e.target.value})\n        } if(e.target.name === 'description'){\n            setInitialValues({...initialValues, description: e.target.value})\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(initialValues);\n    }\n\n    return (\n        <form className=\"form-container\" onSubmit={handleSubmit}>\n            <input className=\"input-field\" type=\"text\" name=\"name\" value={initialValues.name} onChange={handleChange} placeholder=\"Title\"></input>\n            <input className=\"input-field\" type=\"text\" name=\"description\" value={initialValues.description} onChange={handleChange} placeholder=\"Write some description\"></input>\n            <button className=\"submit-btn\" type=\"submit\">Send</button>\n        </form>\n    );\n}\n\nexport default CategoriesForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Members/MembersForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport '../FormStyles.css';\n\nconst MembersForm = () => {\n  const [initialValues, setInitialValues] = useState({\n    name: '',\n    description: ''\n  })\n\n  const handleChange = (e) => {\n    if(e.target.name === 'name'){\n      setInitialValues({...initialValues, name: e.target.value})\n    } if(e.target.name === 'description'){\n      setInitialValues({...initialValues, description: e.target.value})\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(initialValues);\n  }\n\n  return (\n    <form className=\"form-container\" onSubmit={handleSubmit}>\n      <input className=\"input-field\" type=\"text\" name=\"name\" value={initialValues.name} onChange={handleChange} placeholder=\"Name\"></input>\n      <input className=\"input-field\" type=\"text\" name=\"description\" value={initialValues.description} onChange={handleChange} placeholder=\"Write some description\"></input>\n      <button className=\"submit-btn\" type=\"submit\">Send</button>\n    </form>\n  );\n}\n\nexport default MembersForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/News/NewsForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'CKEditor' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":18},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":58,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":58,"endColumn":22},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":62,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":62,"endColumn":18}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport \"../../Components/FormStyles.css\";\nimport {\n  getCategories,\n  getNews,\n  updateNews,\n  createNews,\n} from \"../../Services/newsFormApiService\";\n\nconst NewsForm = () => {\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n    content: \"\",\n    category: [],\n    id: \"\",\n    image: \"\",\n  });\n  const [categories, setCategories] = useState([]);\n\n  const getDataCategories = async (setCategories) => {\n    await getCategories(setCategories);\n  };\n\n  const handleChange = (e) => {\n    if (e.target.name === \"name\") {\n      setInitialValues({ ...initialValues, name: e.target.value });\n    }\n    if (e.target.name === \"category\") {\n      const newCategorySelected = categories?.find(\n        (category) => category.name === e.target.value\n      );\n      setInitialValues({\n        ...initialValues,\n        category: e.target.value,\n        id: newCategorySelected?.id,\n        image: newCategorySelected?.image,\n      });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    postNews();\n  };\n\n  const postNews = async () => {\n    try {\n      const data = await getNews();\n      const sameData = data.find((news) => news.id === initialValues.id);\n      if (sameData) {\n        await updateNews(initialValues);\n      } else {\n        try {\n          await createNews(initialValues, setInitialValues);\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getDataCategories(setCategories);\n  }, []);\n\n  return (\n    <form className=\"form-container\" onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">Title</label>\n      <input\n        className=\"input-field\"\n        type=\"text\"\n        name=\"name\"\n        value={initialValues.name || \"\"}\n        onChange={handleChange}\n        minLength=\"5\"\n        required\n      ></input>\n\n      <label htmlFor=\"content\">Content</label>\n      <CKEditor\n        editor={ClassicEditor}\n        data={initialValues.content || \"\"}\n        required={true}\n        onChange={(event, editor) => {\n          const data = editor.getData();\n          setInitialValues({ ...initialValues, content: data });\n        }}\n      />\n\n      <label htmlFor=\"category\">Category</label>\n      <select\n        className=\"select-field\"\n        name=\"category\"\n        value={initialValues.category || \"\"}\n        onChange={handleChange}\n        required\n      >\n        <option value=\"\" disabled>\n          Select Category\n        </option>\n        {categories?.map((category) => {\n          return (\n            <option key={category.id} value={category.name}>\n              {category.name}\n            </option>\n          );\n        })}\n      </select>\n      {initialValues.image ? (\n        <img src={initialValues.image} alt={initialValues.category}></img>\n      ) : null}\n      <button className=\"submit-btn\" type=\"submit\">\n        Send\n      </button>\n    </form>\n  );\n};\n\nexport default NewsForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/News/NewsList.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport '../CardListStyles.css';\n\nconst NewsList = () => {\n    const newsMock = [\n        {id: 2, name: 'Titulo de prueba', description: 'Descripcion de prueba'},\n        {id: 1, name: 'Titulo de prueba', description: 'Descripcion de prueba'},\n        {id: 3, name: 'Titulo de prueba', description: 'Descripcion de prueba'}\n    ];\n\n    return (\n        <div>\n            <h1>Listado de Novedades</h1>\n            <ul className=\"list-container\">\n                {newsMock.length > 0 ?\n                    newsMock.map((element) => {\n                        return(\n                            <li className=\"card-info\" key={element.id}>\n                                <h3>{element.name}</h3>\n                                <p>{element.description}</p>\n                            </li>\n                        )\n                    })\n                :\n                    <p>No hay novedades</p>\n                }\n            </ul>\n        </div>\n    );\n}\n\nexport default NewsList;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Projects/ProjectsForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport '../FormStyles.css';\n\nconst ProjectsForm = () => {\n  const [initialValues, setInitialValues] = useState({\n    title: '',\n    description: ''\n  })\n\n  const handleChange = (e) => {\n    if(e.target.name === 'title'){\n      setInitialValues({...initialValues, title: e.target.value})\n    } if(e.target.name === 'description'){\n      setInitialValues({...initialValues, description: e.target.value})\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(initialValues);\n  }\n\n  return (\n    <form className=\"form-container\" onSubmit={handleSubmit}>\n      <input className=\"input-field\" type=\"text\" name=\"title\" value={initialValues.title} onChange={handleChange} placeholder=\"Title\"></input>\n      <input className=\"input-field\" type=\"text\" name=\"description\" value={initialValues.description} onChange={handleChange} placeholder=\"Write some description\"></input>\n      <button className=\"submit-btn\" type=\"submit\">Send</button>\n    </form>\n  );\n}\n\nexport default ProjectsForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Slides/SlidesForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport '../FormStyles.css';\n\nconst SlidesForm = () => {\n    const [initialValues, setInitialValues] = useState({\n        name: '',\n        description: ''\n    });\n\n    const handleChange = (e) => {\n        if(e.target.name === 'name'){\n            setInitialValues({...initialValues, name: e.target.value})\n        } if(e.target.name === 'description'){\n            setInitialValues({...initialValues, description: e.target.value})\n        }\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        console.log(initialValues);\n    }\n\n    return (\n        <form className=\"form-container\" onSubmit={handleSubmit}>\n            <input className=\"input-field\" type=\"text\" name=\"name\" value={initialValues.name} onChange={handleChange} placeholder=\"Slide Title\"></input>\n            <input className=\"input-field\" type=\"text\" name=\"description\" value={initialValues.description} onChange={handleChange} placeholder=\"Write the description\"></input>\n            <button className=\"submit-btn\" type=\"submit\">Send</button>\n        </form>\n    );\n}\n\nexport default SlidesForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Testimonials/TestimonialsForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport '../FormStyles.css';\n\nconst TestimonialForm = () => {\n    const [initialValues, setInitialValues] = useState({\n       name: '',\n       description: ''\n    });\n\n    const handleChange = (e) => {\n        if(e.target.name === 'name'){\n            setInitialValues({...initialValues, name: e.target.value})\n        } if(e.target.name === 'description'){\n            setInitialValues({...initialValues, description: e.target.value})\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(initialValues);\n    }\n\n    return (\n        <form className=\"form-container\" onSubmit={handleSubmit}>\n            <input className=\"input-field\" type=\"text\" name=\"name\" value={initialValues.name} onChange={handleChange} placeholder=\"Testimonial Title\"></input>\n            <input className=\"input-field\" type=\"text\" name=\"description\" value={initialValues.description} onChange={handleChange} placeholder=\"Testimonial description\"></input>\n            <button className=\"submit-btn\" type=\"submit\">Send</button>\n        </form>\n    );\n}\n\nexport default TestimonialForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Users/UsersForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":21,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":21,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport '../FormStyles.css';\n\nconst UserForm = () => {\n    const [initialValues, setInitialValues] = useState({\n        name: '',\n        email: '',\n        roleId: ''\n    })\n\n    const handleChange = (e) => {\n        if(e.target.name === 'name'){\n            setInitialValues({...initialValues, name: e.target.value})\n        } if(e.target.name === 'email'){\n            setInitialValues({...initialValues, email: e.target.value})\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(initialValues);\n    }\n\n    return (\n        <form className=\"form-container\" onSubmit={handleSubmit}>\n            <input className=\"input-field\" type=\"text\" name=\"name\" value={initialValues.name || ''} onChange={handleChange} placeholder=\"Name\"></input>\n            <input className=\"input-field\" type=\"text\" name=\"email\" value={initialValues.description || ''} onChange={handleChange} placeholder=\"Email\"></input>\n            <select className=\"input-field\" value={initialValues.roleId || ''} onChange={e => setInitialValues({...initialValues, roleId: e.target.value})}>\n                <option value=\"\" disabled >Select the role</option>\n                <option value=\"1\">Admin</option>\n                <option value=\"2\">User</option>\n            </select>\n            <button className=\"submit-btn\" type=\"submit\">Send</button>\n        </form>\n    );\n}\n\nexport default UserForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Services/newsFormApiService.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":10,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":10,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from \"axios\";\n\nconst getCategories = async (setCategories) => {\n  try {\n    const response = await axios.get(\n      \"http://ongapi.alkemy.org/public/api/categories\"\n    );\n    setCategories(response.data.data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getNews = async () => {\n  const response = await axios.get(\"http://ongapi.alkemy.org/public/api/news\");\n  const data = response.data.data;\n  return data;\n};\n\nconst updateNews = async (initialValues) => {\n  await axios.patch(\n    `http://ongapi.alkemy.org/public/api/news/${initialValues.id}`,\n    initialValues\n  );\n};\n\nconst createNews = async (initialValues, setInitialValues) => {\n  const res = await axios.post(\n    \"http://ongapi.alkemy.org/public/api/news\",\n    initialValues\n  );\n  if (res.status === 200) {\n    setInitialValues({\n      name: \"\",\n      content: \"\",\n      category: [],\n      id: \"\",\n      image: \"\",\n    });\n  }\n  return res;\n};\n\nexport { getCategories, getNews, updateNews, createNews };\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Services/privateApiService.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":11,"column":18,"nodeType":"MemberExpression","messageId":"unexpected","endLine":11,"endColumn":29},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":12,"column":19,"nodeType":"MemberExpression","messageId":"unexpected","endLine":12,"endColumn":30}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from 'axios';\n\nconst config = {\n    headers: {\n        Group: 91                //Aqui va el ID del equipo!!\n    }\n}\n\nconst Get = () => {\n    axios.get('https://jsonplaceholder.typicode.com/users', config)\n    .then(res => console.log(res))\n    .catch(err => console.log(err))\n}\n\nexport default Get\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Services/publicApiService.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":11,"column":18,"nodeType":"MemberExpression","messageId":"unexpected","endLine":11,"endColumn":29},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":12,"column":19,"nodeType":"MemberExpression","messageId":"unexpected","endLine":12,"endColumn":30}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from 'axios';\n\nconst config = {\n    headers: {\n        Group: 91                //Aqui va el ID del equipo!!\n    }\n}\n\nconst Get = () => {\n    axios.get('https://jsonplaceholder.typicode.com/users', config)\n    .then(res => console.log(res))\n    .catch(err => console.log(err))\n}\n\nexport default Get\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/app/store.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/features/counter/Counter.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  selectCount,\n} from './counterSlice';\nimport styles from './Counter.module.css';\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={e => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() =>\n            dispatch(incrementByAmount(Number(incrementAmount) || 0))\n          }\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(Number(incrementAmount) || 0))}\n        >\n          Add Async\n        </button>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/features/counter/counterSlice.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":11},{"ruleId":"no-unused-vars","severity":1,"message":"'Provider' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":18}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/serviceWorker.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":44,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":44,"endColumn":22},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":72,"column":15,"nodeType":"MemberExpression","messageId":"unexpected","endLine":72,"endColumn":26},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":85,"column":15,"nodeType":"MemberExpression","messageId":"unexpected","endLine":85,"endColumn":26},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":97,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":97,"endColumn":20},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":125,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":125,"endColumn":18}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/setupTests.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]